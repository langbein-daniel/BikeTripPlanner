NAME=journey-planner
BUILD_NAME=build

# Docker container registry
DOCKER_REGISTRY_URL=docker.io/biketripplanner/
DOCKER_IMAGE_TAG=VGN

# URL to GTFS .zip file. Alternatively: Name of .zip file located inside ./gtfs-data.
GTFS_URL=gtfs.zip

# URL to .osm.pbf region from geofabrik.de server.
# Alternatively, path to local .osm.pbf file relative to ./osm-excerpt directory.
OSM_PBF_URL=https://download.geofabrik.de/europe/germany-latest.osm.pbf
#OSM_PBF_URL=region.osm.pbf

# Bounding-box.
MIN_LON=10.011636032586688
MAX_LON=12.223993889052613
MIN_LAT=48.70792025947608
MAX_LAT=50.25793688217101

#
# Healthcheck
#

# Name of one agency from the GTFS data set.
HEALTHCHECK_OPENTRIPPLANNER=VGN

# We imported GTFS data into two custom layers, stop and station.
# If these layers don't exist, something is wrong!
# To check this, we use the following healthcheck:
# http://localhost:4000/v1/search?text=N%C3%BCrnberg&lang=en&layers=stop,station
HEALTHCHECK_API_REQUEST=localhost:4000/v1/search?text=N%C3%BCrnberg&lang=en&layers=stop,station
# Name of one station from the GTFS data set.
HEALTHCHECK_API_RESPONSE='"name":"Nürnberg Hbf"'

# An address.
HEALTHCHECK_LIBPOSTAL_REQUEST=localhost:4400/parse?address=Bahnhofsplatz%209,%2090443%20N%C3%BCrnberg,%20Germany
# A parsed part of the above address.
HEALTHCHECK_LIBPOSTAL_RESPONSE='"label":"city","value":"nürnberg"'

# Possible healthcheck URLs:
#   http://localhost:4100/parser/search?text=n%C3%BCrnberg
#   http://localhost:4100/parser/findbyid?ids=101905935
#   http://localhost:4100/parser/query?text=n%C3%BCrnberg
#   http://localhost:4100/parser/tokenize?text=n%C3%BCrnberg
#   http://localhost:4100/parser/search?text=nürnberg&lang=rus
HEALTHCHECK_PLACEHOLDER_REQUEST=localhost:4100/parser/search?text=n%C3%BCrnberg
HEALTHCHECK_PLACEHOLDER_RESPONSE='"name":"Nürnberg"'

# Coordinates and address.
HEALTHCHECK_INTERPOLATION_REQUEST=localhost:4300/search/geojson?lat=49.44627&lon=11.08221=11&number=9&street=bahnhofsplatz
HEALTHCHECK_INTERPOLATION_RESPONSE='"type":"exact"'

# Coordinates (LON/LAT).
HEALTHCHECK_PIP_REQUEST=localhost:4200/11.08245/49.44511
# A locality/city/country containing the above coordinates.
HEALTHCHECK_PIP_RESPONSE=Nürnberg

#
# Tileserver GL
#

# URL to map style git repository. Alternativey: Name of directory located inside ./tileserver-gl.
MAP_STYLE_URL=https://github.com/langbein-daniel/cyclo-bright-gl-style.git

#
# OpenTripPlanner
#

# OpenTripPlanner Java options during build steps.
JAVA_BUILD_OPTS=-Xmx10G
# OpenTripPlanner Java options.
JAVA_OPTS=-Xmx2G

#
# Pelias
#

PELIAS_BUILD_DIR=./pelias
# URL to git repository containing Dockerfile for pelias-gtfs.
PELIAS_GTFS_URL=https://github.com/HSLdevcom/pelias-gtfs

# Image versions of Pelias services:
PELIAS_OPENSTREETMAP=pelias/openstreetmap:master
PELIAS_POLYLINES=pelias/polylines:master
PELIAS_WHOSONFIRST=pelias/whosonfirst:master
PELIAS_SCHEMA=pelias/schema:master
PELIAS_LIBPOSTAL=pelias/libpostal-service
PELIAS_API=pelias/api:master
PELIAS_PLACEHOLDER=pelias/placeholder:master
PELIAS_INTERPOLATION=pelias/interpolation:master
PELIAS_PIP=pelias/pip-service:master
PELIAS_ELASTICSEARCH=pelias/elasticsearch:7.16.1
