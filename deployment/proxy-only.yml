version: '3.9'
networks:
  proxy:
services:

  #
  # HTTPS certificates and reverse proxy of BikeTripPlanner services
  #

  ${DOMAIN_DIGITRANSIT_UI:?}:
    container_name: ${DOMAIN_DIGITRANSIT_UI:?}
    image: nginx:stable-alpine
    environment:
      - VIRTUAL_HOST=${DOMAIN_DIGITRANSIT_UI:?}
      - VIRTUAL_PORT=80
      - LETSENCRYPT_HOST=${DOMAIN_DIGITRANSIT_UI:?}
    volumes:
      - ./conf/ui.conf:/etc/nginx/conf.d/default.conf:ro
    networks:
     - proxy
  ${DOMAIN_API:?}:
    container_name: ${DOMAIN_API:?}
    image: nginx:stable-alpine
    environment:
      - VIRTUAL_HOST=${DOMAIN_API:?}
      - VIRTUAL_PORT=80
      - LETSENCRYPT_HOST=${DOMAIN_API:?}
    volumes:
      - ./conf/api.conf:/etc/nginx/conf.d/default.conf:ro
    networks:
     - proxy
  ${DOMAIN_OPENTRIPPLANNER:?}:
    container_name: ${DOMAIN_OPENTRIPPLANNER:?}
    image: nginx:stable-alpine
    environment:
      - VIRTUAL_HOST=${DOMAIN_OPENTRIPPLANNER:?}
      - VIRTUAL_PORT=80
      - LETSENCRYPT_HOST=${DOMAIN_OPENTRIPPLANNER:?}
    volumes:
      - ./conf/otp.conf:/etc/nginx/conf.d/default.conf:ro
    networks:
     - proxy
  ${DOMAIN_TILESERVER_GL:?}:
    container_name: ${DOMAIN_TILESERVER_GL:?}
    image: nginx:stable-alpine
    environment:
      - VIRTUAL_HOST=${DOMAIN_TILESERVER_GL:?}
      - VIRTUAL_PORT=80
      - LETSENCRYPT_HOST=${DOMAIN_TILESERVER_GL:?}
    volumes:
      - ./conf/tiles.conf:/etc/nginx/conf.d/default.conf:ro
    networks:
     - proxy

  #
  # REVERSE PROXY & CERTIFICATES
  #

  nginx-proxy:
    logging:
      driver: json-file
      options:
        max-size: '10m'
        max-file: '1'
    image: nginx:stable-alpine
    restart: unless-stopped
    ports:
      - '0.0.0.0:80:80'
      - '0.0.0.0:443:443'
      # - '::0:80:80' # IPv6
      # - '::0:443:443' # IPv6
    environment:
      SSL_POLICY: Mozilla-Modern
      # ENABLE_IPV6: true
      TRUST_DOWNSTREAM_PROXY: false
    volumes:
      - ./private/conf.d:/etc/nginx/conf.d
      - ./private/vhost.d:/etc/nginx/vhost.d
      - ./private/html:/usr/share/nginx/html
      - ./private/certs:/etc/nginx/certs:ro
      - ./private/httpasswd:/etc/nginx/htpasswd:ro
    labels:
      - 'com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy'
    networks:
      - proxy

  docker-gen:
    logging:
      driver: json-file
      options:
        max-size: '10m'
        max-file: '1'
    # nginxproxy/docker-gen:latest with added nginx.tmpl
    image: p1st/docker-gen:latest
    command: -notify-sighup nginx-proxy -watch -wait 5s:30s /etc/docker-gen/templates/nginx.tmpl /etc/nginx/conf.d/default.conf
    restart: unless-stopped
    volumes:
      - ./private/conf.d:/etc/nginx/conf.d
      - ./private/vhost.d:/etc/nginx/vhost.d
      - ./private/html:/usr/share/nginx/html
      - ./private/certs:/etc/nginx/certs:ro
      - ./private/httpasswd:/etc/nginx/htpasswd:ro
      #
      - /var/run/docker.sock:/tmp/docker.sock:ro
    labels:
      - 'com.github.jrcs.letsencrypt_nginx_proxy_companion.docker_gen'
    networks:
      - proxy

  acme-companion:
    logging:
      driver: json-file
      options:
        max-size: '10m'
        max-file: '1'
    image: nginxproxy/acme-companion
    restart: unless-stopped
    environment:
      DEFAULT_EMAIL: ${LETS_ENCRYPT_NOTIFICATION_EMAIL:?}
    volumes:
      - ./private/conf.d:/etc/nginx/conf.d
      - ./private/vhost.d:/etc/nginx/vhost.d
      - ./private/html:/usr/share/nginx/html
      - ./private/certs:/etc/nginx/certs:rw
      #
      - ./private/acme.sh:/etc/acme.sh
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - proxy
    depends_on:
      - nginx-proxy
      - docker-gen

  #
  # PERIODICALLY DELETE LOG FILES
  #
  # They contain personal information such as IP addresses.
  #

  docker_cron_logging:
    image: busybox
    volumes:
      - /mnt/data/docker/containers:/docker-containers
    # Daily at 04:30: Truncate docker logfiles.
    command: >
      sh -c "
      mkdir -p /var/spool/cron/crontabs/
      && echo '30 4 * * * truncate -s 0 /docker-containers/*/*-json.log > /proc/1/fd/1 2>/proc/1/fd/2' > /var/spool/cron/crontabs/root
      && crond -f -d 8"
